using System.Collections;
using System.Collections.Generic;
using UnityEngine;

[CreateAssetMenu(fileName = "New Inventory", menuName = "Inventory System/Inventory")]
public class InventoryObject : ScriptableObject 
{
    public List<InventorySlot> Container = new List<InventorySlot>();
    

    public void AddItem(ItemObject _item, int _amount)
    {
       for (int i = 0; i<Container.Count; i++)
        {
            if (Container[i].item == _item)
            {
                Container[i].AddAmount(_amount);
                
                return;
            }
       } 

       
            Container.Add(new InventorySlot(_item, _amount));
       
    }
    

}

[System.Serializable]

//Serialization is the process of converting an object into a stream of bytes to store the object or transit it to memory, a database, or a file.
//Its main purpose is to save the state of an object in order to be able to recreat it when needed.
public class InventorySlot
{
    public ItemObject item;
    public int amount;

    public InventorySlot(ItemObject _item, int _amount)
    {
        item = _item;
        amount = _amount;
    }

    public void AddAmount(int value)
    {
        amount += value;
    }
}
