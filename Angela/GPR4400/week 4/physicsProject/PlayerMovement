using System.Collections;
using System.Collections.Generic;
using UnityEngine;

public class PlayerMovement : MonoBehaviour
{
    // using character controller physics
    //reference to the character controller
    CharacterController controller;
    public float moveSpeed;
    public float rotationSpeed;
    public float jumpSpeed;
    float originalStepOffset;
    float ySpeed;

    
    
    // Start is called before the first frame update
    void Start()
    {
        controller = GetComponent<CharacterController>();
        originalStepOffset = controller.stepOffset;
    }

    // Update is called once per frame
    void Update()
    {
        float horizontalMovement = Input.GetAxis("Horizontal");
        float verticalMovement = Input.GetAxis("Vertical");
        //create Vector3 to help in the player movement 
        Vector3 MovementDirection = new Vector3(horizontalMovement, 0, verticalMovement);
        float magnitude = Mathf.Clamp01(MovementDirection.magnitude) * moveSpeed;
        MovementDirection.Normalize();

        ySpeed += Physics.gravity.y * Time.deltaTime;

        if (Input.GetButtonDown("Jump"))
        {
            //look at inspector
            controller.stepOffset = originalStepOffset;
            ySpeed = jumpSpeed;
        }

        else
        {
            controller.stepOffset = 0;
        }

        //Velocity is a vector that indicates displacement, timeand istance
        Vector3 velocity = MovementDirection * magnitude;
        velocity.y = ySpeed;

        controller.Move(velocity * Time.deltaTime);

        //using the controller to move the player
        
        //vector3.zero = vector3(0,0,0)
        if (MovementDirection !=Vector3.zero)
        {
           /* transform.Translate(MovementDirection * moveSpeed * Time.deltaTime, Space.World);*/

            Quaternion toRotate = Quaternion.LookRotation(MovementDirection, Vector3.up);
            transform.rotation = Quaternion.RotateTowards(transform.rotation, toRotate, rotationSpeed * Time.deltaTime);
        }
        
    }

    
}
